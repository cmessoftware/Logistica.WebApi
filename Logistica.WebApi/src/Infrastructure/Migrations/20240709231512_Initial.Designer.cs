// <auto-generated />
using System;
using Logistica.WebApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Logistica.WebApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240709231512_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationNodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceNodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationNodeId");

                    b.HasIndex("SourceNodeId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.RouteNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RouteNodes");
                });

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Patent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.Route", b =>
                {
                    b.HasOne("Logistica.WebApi.Infrastructure.Entities.RouteNode", "DestinationNodeNavigation")
                        .WithMany()
                        .HasForeignKey("DestinationNodeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Logistica.WebApi.Infrastructure.Entities.RouteNode", "SourceNodeNavigation")
                        .WithMany()
                        .HasForeignKey("SourceNodeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DestinationNodeNavigation");

                    b.Navigation("SourceNodeNavigation");
                });

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.Vehicule", b =>
                {
                    b.HasOne("Logistica.WebApi.Infrastructure.Entities.Route", "Route")
                        .WithMany("Vehicules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Logistica.WebApi.Infrastructure.Entities.Route", b =>
                {
                    b.Navigation("Vehicules");
                });
#pragma warning restore 612, 618
        }
    }
}
